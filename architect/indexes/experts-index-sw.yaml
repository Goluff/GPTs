---
- id: automation_engineer
  name: Riley Cronberg
  title: Automation Engineer
  domain: Infrastructure Automation and Service Management
  keywords:
    - automate infrastructure tasks
    - build idempotent scripts
    - trigger service workflows
    - orchestrate startup sequences
    - validate script convergence
    - schedule recovery jobs
    - template infra configuration
    - manage secrets injection
    - configure systemd units
    - supervise automation services
    - debug automation failures
    - forward logs automatically
    - run health check scripts
    - retry failed automation
    - rotate secrets safely
    - rollback automation changes
    - checkpoint service state
    - broadcast remote commands
    - run SSH automation fanout
    - deploy event-driven workflows
    - trap errors in scripts
    - audit automation activity
    - inject config overlays
    - enforce dry-run testing
    - test automation pipelines
    - monitor infra automation
    - escalate on failure conditions
    - schedule automated tasks
    - inject vault-based secrets
    - dispatch commands remotely
    - enforce infra compliance
    - switch dev/staging configs
    - normalize multi-env setups
    - conditionally execute services
    - orchestrate CI deployments
    - define automation DAGs
    - execute rollback logic
    - restart failed units
    - validate automation health
    - configure escalation hooks
    - react to webhook events
    - enforce script modularity
    - align with IAC policies
    - template environment variables
    - inject context-aware configs
    - audit infrastructure scripts
    - enforce repeatable deployments
    - supervise long-running jobs
    - branch automation logic
    - restart crashed services
    - deploy YAML-based configs
    - apply dry-run safeguards
    - recover from script errors
    - coordinate test execution
    - automate service recovery
    - layer configuration files
  type: expert-index
- id: cicd_pipeline_expert
  name: Gene Tagwalker
  title: CI/CD Pipeline Expert
  domain: Continuous Integration / Continuous Deployment Systems
  keywords:
    - configure ci pipeline
    - build multi-stage workflows
    - deploy to staging
    - orchestrate ci runners
    - enforce test coverage
    - schedule matrix builds
    - debug flaky tests
    - manage semantic versioning
    - trigger conditional jobs
    - approve gated deployments
    - handle secrets rotation
    - deploy with policy gates
    - secure ci environments
    - rollback failed deploy
    - cache ci artifacts
    - inject environment secrets
    - template hybrid deployments
    - sync ci test telemetry
    - audit deployment pipeline
    - block test regressions
    - shard ci job workloads
    - promote build artifacts
    - detect build drift
    - validate sbom traceability
    - inject changelog automation
    - auto-block broken merges
    - verify artifact integrity
    - sign build outputs
    - trace deployment lineage
    - run ci on bare metal
    - deploy to kubernetes
    - deploy serverless functions
    - validate ci reproducibility
    - enforce slsa compliance
    - detect ci tampering
    - monitor ci pipeline health
    - configure parallel jobs
    - inject ci config dynamically
    - sandbox build runners
    - maintain audit compliance
    - isolate test environments
    - enforce deployment order
    - promote packages safely
    - rollback on error
    - manage ci drift detection
    - test gating workflows
    - simulate rollback readiness
    - auto-merge with gating
    - schedule deployment waves
    - orchestrate ci release flow
    - generate release changelogs
    - coordinate hybrid deploy targets
  type: expert-index
- id: code_quality_auditor
  name: Morgan Lintwright
  title: Code Quality Auditor
  domain: Static Analysis and Security Linting
  keywords:
    - audit code readability
    - detect code smells
    - enforce coding standards
    - refactor complex functions
    - validate naming conventions
    - analyze test coverage
    - identify technical debt
    - measure code maintainability
    - scan for anti-patterns
    - benchmark code complexity
    - enforce code style
    - configure static analysis
    - lint pull request diffs
    - catch formatting issues
    - automate style checking
    - visualize code regressions
    - isolate flaky tests
    - flag duplicate logic
    - audit code reuse patterns
    - evaluate test quality
    - flag architectural drift
    - review dependency hygiene
    - apply cyclomatic metrics
    - automate quality gates
    - verify linter integration
    - highlight insecure patterns
    - check test isolation
    - monitor code health trends
    - run pre-commit linters
    - measure test coverage gaps
    - score code modularity
    - review code maintainability
    - catch naming inconsistencies
    - validate code formatting
    - detect unnecessary coupling
    - trace quality regressions
    - identify brittle tests
    - visualize refactor targets
    - enforce repo-wide style
    - recommend cleanup tasks
    - scan for outdated patterns
    - assess codebase quality
    - detect unnecessary duplication
    - automate code review feedback
    - check logic clarity
    - find complexity hotspots
    - scan for outdated tests
    - enforce team lint rules
    - align with codebase standards
    - automate defect discovery
  type: expert-index
- id: dev_env_specialist
  name: Nia Shellstone
  title: Dev Env Specialist
  domain: Tooling, Reproducibility, and Developer Experience
  keywords:
    - set up dev environment
    - debug local toolchain
    - onboard new developers
    - configure dotfiles bundle
    - isolate dev dependencies
    - create dev containers
    - manage project secrets
    - use environment snapshots
    - enforce consistent setup
    - install cross-platform tools
    - debug configuration drift
    - use SDK managers
    - automate setup scripts
    - build dev CLI tools
    - monitor onboarding latency
    - benchmark startup speed
    - containerize dev workflows
    - configure project toolchain
    - sandbox dev environments
    - inspect runtime locally
    - align local and CI
    - inject secrets securely
    - enforce formatting standards
    - automate local builds
    - reproduce local issues
    - resolve env mismatch
    - set up ephemeral workspace
    - configure devcontainers
    - automate shell tasks
    - use version managers
    - write onboarding scripts
    - optimize dev startup
    - prevent dependency drift
    - build reproducible toolchains
    - configure IDE extensions
    - enforce linter setup
    - run local profiling
    - generate environment lockfile
    - define setup checks
    - troubleshoot build failures
    - document local workflow
    - script developer tasks
    - enable first build success
    - deploy isolated dev setup
    - simulate production locally
    - enforce project consistency
    - scan for config issues
    - test sandbox feature branch
    - align runtime versions
    - trace toolchain problems
    - compare staging to local
  type: expert-index
- id: microsoft_office_automation_engineer
  name: Valerie Macros
  title: Microsoft Office Automation Engineer
  domain: Microsoft Office Automation and Scripting
  keywords:
    - automate excel tasks
    - build outlook automation
    - create office macros
    - write vba scripts
    - automate word formatting
    - streamline powerpoint updates
    - automate document workflows
    - generate excel reports
    - parse office documents
    - trigger flows from outlook
    - connect office with sharepoint
    - build power automate flows
    - integrate teams with office
    - apply dynamic arrays
    - validate spreadsheet inputs
    - autoformat office content
    - build macro templates
    - automate document cleanup
    - scrub document metadata
    - version office files
    - monitor automation errors
    - retry failed scripts
    - debug vba automation
    - build excel dashboards
    - sync office with onedrive
    - manage document retention
    - apply audit tagging
    - classify office documents
    - train office power users
    - teach macro scripting
    - govern low-code tools
    - enforce naming conventions
    - reuse script modules
    - catalog office automations
    - format charts automatically
    - auto-generate status reports
    - automate email replies
    - clean excel datasets
    - split and merge docs
    - coordinate meeting workflows
    - auto-send follow-ups
    - customize ribbon buttons
    - batch update templates
    - manage office deployments
    - build secure office scripts
    - auto-update slide decks
    - automate data refresh
    - integrate flow with lists
    - trigger approvals from excel
    - audit office automation
    - align with office policies
    - reduce office manual work
    - build cross-office automations
    - document office workflows
    - inject macros into forms
    - automate chart creation
    - generate summary sheets
    - format documents in bulk
  type: expert-index
- id: powerapps_solution_integrator
  name: Meena Lowkode
  title: Microsoft Power Platform Solution Integrator
  domain: Microsoft Dataverse & Power Platform Engineering
  keywords:
    - build canvas app
    - create model-driven app
    - integrate dataverse schema
    - automate with power automate
    - build custom connectors
    - connect powerapps to sharepoint
    - connect powerapps to sql
    - trigger flows from apps
    - configure low-code workflows
    - define dataverse relationships
    - write power fx formulas
    - debug power automate flows
    - reuse connectors in flows
    - control role-based access
    - enforce data exposure rules
    - design accessible powerapps ui
    - build responsive forms
    - manage low-code permissions
    - modularize power fx logic
    - write reusable fx code
    - package low-code solutions
    - deploy power platform apps
    - profile flow performance
    - monitor powerapps usage
    - integrate with rest api
    - automate approval workflows
    - version low-code solutions
    - manage environments in dataverse
    - transition apps across tenants
    - build internal business apps
    - log app performance
    - maintain flow reliability
    - align with dlp policies
    - apply low-code governance
    - document powerapps architecture
    - map flow dependencies
    - export and import solutions
    - secure data in powerapps
    - design low-code data models
    - validate app responsiveness
    - test low-code flows
    - build low-code dashboards
    - connect powerapps to teams
    - create form-driven workflows
    - automate form submissions
    - enforce app usage policies
    - maintain dataverse integrity
    - enable agile customization
    - support enterprise workflows
    - link powerapps with power bi
    - design app navigation flow
    - build cross-app integrations
    - visualize low-code architectures
    - reduce manual form processing
  type: expert-index
- id: unit_test_engineer
  name: Zane Assertwell
  title: Unit Test Engineer
  domain: Software Testing & Continuous Integration
  keywords:
    - write unit tests
    - mock service dependencies
    - test edge cases
    - create test harnesses
    - enforce test coverage
    - isolate business logic
    - validate core functions
    - debug test failures
    - reduce test flakiness
    - triage CI regressions
    - integrate test pipeline
    - assert expected behavior
    - write clean test code
    - audit test quality
    - monitor test execution
    - benchmark test speed
    - generate deterministic data
    - track assertion failures
    - improve test messages
    - maintain test clarity
    - verify logic correctness
    - add mutation testing
    - apply property testing
    - refactor legacy tests
    - remove flaky tests
    - guard against regressions
    - write reproducible tests
    - enforce CI assertions
    - trigger test gates
    - configure test workflows
    - measure test stability
    - assert API behavior
    - test non-deterministic code
    - simulate external services
    - improve test granularity
    - define input generators
    - test complex conditions
    - check dependency purity
    - apply invariant validation
    - structure test cases
    - cover untested logic
    - verify test thresholds
    - isolate flaky conditions
    - fix intermittent failures
    - align tests with coverage
    - strengthen test assertions
    - validate CI passes
    - fail early on bugs
    - manage test isolation
    - test integration edges
    - optimize test resources
    - improve test traceability
    - enforce naming conventions
    - detect failing branches
  type: expert-index
